bundle_root: null
pretrained_path: 
ckpt_path: $@bundle_root + '/model'      

data_file_base_dir: null
data_list_file_path: null

fold: 0

model_selection: Dice


training: 
  # hyper-parameters
  amp: true
  determ: true
  input_channels: 1
  learning_rate: 0.0002
  num_images_per_batch: 2                               # number of images per batch (before 1)
  num_iterations: 1500         # : was 40000 before
  num_iterations_per_validation: 5                        # number of iterations between each validation step during training
  num_patches_per_image: 2
  num_sw_batch_size: 8                                      # batch size for the sliding window during training
  num_workers: 4
  num_workers_val: 2
  output_classes: 2
  overlap_ratio: 0.5
  patch_size: 
  - 128
  - 128
  - 128
  patch_size_valid: 
  - 128
  - 128
  - 128
  softmax: true                                             # apply softmax activation to the model's output during training?

  loss:
    _target_: GeneralizedDiceLoss
    batch: true
    include_background: false
    sigmoid: $not @training#softmax
    smooth_dr: 1.0e-06    #  check this value
    smooth_nr: 0
    softmax: $@training#softmax
    to_onehot_y: $@training#softmax

  optimizer:
    _target_: torch.optim.AdamW
    lr: '@training#learning_rate'
    weight_decay: 1.0e-05 # : decide this parameter

  lr_scheduler:
    _target_: torch.optim.lr_scheduler.StepLR
    gamma: 0.5
    optimizer: $@training#optimizer
    step_size: $@training#num_iterations // 5

batch_size: '@training#num_images_per_batch'
num_epochs: 300
num_warmup_epochs: 3
resample: false
resample_resolution: [1, 1, 1]
crop_mode: ratio
normalize_mode: meanstd
intensity_bounds: null

num_epochs_per_validation: null
num_epochs_per_saving: 1
num_steps_per_image: null
num_crops_per_image: 1

log_output_file: "$@bundle_root + '/model/training.log'"

finetune:
  activate: True
  pretrained_ckpt_name: $@pretrained_path + '/model_fold2' + '/best_metric_model.pt'  # : check this path


# validation 
validate:
  ckpt_name: $@bundle_root + '/model/best_metric_model.pt' 
  output_path: $@bundle_root + '/prediction_fold' + str(@fold)
  log_output_file: "$@bundle_root + '/model_fold' + str(@fold) + '/validation.log'"
  save_mask: true

# inference
infer:
  ckpt_name: $@bundle_root + '/model/best_metric_model.pt' 
  data_list_key: testing
  fast: false
  log_output_file: "$@bundle_root + '/model_fold' + str(@fold) + '/inference.log'"
  output_path: $@bundle_root + '/prediction_' + @infer#data_list_key

