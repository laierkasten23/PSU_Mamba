---
image_key: image
label_key: label
transforms_train:
  _target_: Compose
  transforms:
  - _target_: LoadImaged
    keys: ["@image_key", "@label_key"]
  - _target_: EnsureChannelFirstd
    keys: ["@image_key", "@label_key"]
  - _target_: Orientationd
    keys: ["@image_key", "@label_key"]
    axcodes: RAS
  - _target_: Spacingd
    keys: ["@image_key", "@label_key"]
    pixdim: null
    mode: [bilinear, nearest]
    align_corners: [true, true]
  - _target_: CastToTyped
    keys: "@image_key"
    dtype: "$torch.float32"
  - PLACEHOLDER_INTENSITY_NORMALIZATION
  - _target_: CastToTyped                             # image data to the torch.float16 data type and label data to the torch.uint8 data type
    keys: ["@image_key", "@label_key"]
    dtype: ["$torch.float16", "$torch.uint8"]
  - _target_: EnsureTyped                             # ensures that the image and label data are of the correct data type
    keys: ["@image_key", "@label_key"]
  - _target_: CastToTyped
    keys: "@image_key"
    dtype: "$torch.float32"
  - _target_: SpatialPadd                             # pads the image and label data to a certain spatial size, which is specified by the patch_size in the training section
    keys: ["@image_key", "@label_key"]
    spatial_size: "@training#patch_size"
    mode: [constant, constant]

  # data augmentation
  - _target_: RandCropByLabelClassesd                 # randomly crops the image and label data to a certain spatial size
    keys: ["@image_key", "@label_key"]
    label_key: "@label_key"
    num_classes: "@training#output_classes"
    spatial_size: "@training#patch_size"
    num_samples: "@training#num_patches_per_image"    # number of samples to crop
  - _target_: RandRotated                             # randomly rotate the image and label data within a certain range
    keys: ["@image_key", "@label_key"]
    range_x: 0.3
    range_y: 0.3
    range_z: 0.3
    mode: [bilinear, nearest]
    prob: 0.2
  - _target_: RandZoomd                                # randomly zooms the image and label data within a certain range
    keys: ["@image_key", "@label_key"]
    min_zoom: 0.8
    max_zoom: 1.2
    mode: [trilinear, nearest]
    prob: 0.16
  - _target_: RandGaussianSmoothd                       # random Gaussian smoothing to the image data
    keys: "@image_key"
    sigma_x: [0.5, 1.15]
    sigma_y: [0.5, 1.15]
    sigma_z: [0.5, 1.15]
    prob: 0.15
  - _target_: RandScaleIntensityd                       # randomly scale the intensity of the image data
    keys: "@image_key"
    factors: 0.3
    prob: 0.5
  - _target_: RandShiftIntensityd                       # randomly shift the intensity of the image data
    keys: "@image_key"
    offsets: 0.1
    prob: 0.5
  - _target_: RandGaussianNoised                        # add random Gaussian noise to the image data
    keys: "@image_key"
    std: 0.01
    prob: 0.15
  - _target_: RandFlipd                                 # randomly flip the image and label data along different spatial axes
    keys: ["@image_key", "@label_key"]
    spatial_axis: 0                                     # spatial axis along which to flip the data (0: x-axis)
    prob: 0.5
  - _target_: RandFlipd
    keys: ["@image_key", "@label_key"]
    spatial_axis: 1                                     # 1: y-axis
    prob: 0.5
  - _target_: RandFlipd
    keys: ["@image_key", "@label_key"]
    spatial_axis: 2                                     # 2: z-axis
    prob: 0.5
  - _target_: CastToTyped                               # casts the image data to the torch.float32 data type and the label data to the torch.uint8 data type
    keys: ["@image_key", "@label_key"]
    dtype: ["$torch.float32", "$torch.uint8"]
